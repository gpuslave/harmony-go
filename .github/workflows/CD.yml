name: Continuous Delivery

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches: [ 'main' ]

  workflow_dispatch:

env:
  IMAGE_NAME: 'harmony-go'

jobs:
  build: # TODO: add caching
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with: 
          go-version-file: 'src/go.mod'
          cache-dependency-path: |
            src/go.sum 
          # go-version: '1.23.5'

      - name: Go module dependencies
        working-directory: ./src
        run: |
          go mod download

      - name: Build
        working-directory: ./src
        run: |
          go build -o harmony-go
      
      - uses: actions/upload-artifact@v4
        with:
          name: harmony-bin
          path: src/harmony-go

  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4

      - name: Install YC CLI
        shell: bash
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name : Run SSH Tunnel
        run: |
          mkdir -p ./.ssh
          touch ./.ssh/bastion && chmod 600 ./.ssh/bastion
          echo "${{ secrets.BASTION_KEY }}" > ./.ssh/bastion

          ssh -f -N \
            -i "./.ssh/bastion" \
            -D 1080 \
            -o StrictHostKeyChecking=no \
            ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOSTNAME }}

      - name: Create SA Key 
        shell: bash
        run: |
          touch ./sa_key.json && chmod 600 ./sa_key.json
          cat << 'EOF' > sa_key.json
            ${{ secrets.SA_KEY }}
          EOF

      - name: Check pods
        run: |
          yc config profile create sa-profile
          yc config set service-account-key ./sa_key.json
          yc config set folder-id ${{ secrets.FOLDER_ID}}
          yc config set cloud-id ${{ secrets.CLOUD_ID}}
          export YC_TOKEN=$(yc iam create-token)
          rm -rf ./sa_key.json

          yc managed-kubernetes cluster get-credentials --internal --name ${{ vars.CLUSTER_NAME }}
          KUBECTL_CLUSTER=$(kubectl config view -o jsonpath="{.clusters[0].name}")
          kubectl config set-cluster "$KUBECTL_CLUSTER" \
            --proxy-url="socks5://localhost:1080"
          
          echo "DEBUG:"
          kubectl config view

          kubectl get pods -A